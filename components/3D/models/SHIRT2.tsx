/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.11 ./public/models/SHIRT2.gltf --transform -t 
Files: ./public/models/SHIRT2.gltf [29.15MB] > SHIRT2-transformed.glb [2.81MB] (90%)
*/
"use client";
import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import {
  selectModelMaterial,
  selectModelNodes,
  setModelMaterial,
  setModelNodes,
} from "@/lib/slices/targetSlice";
import { useAppDispatch, useAppSelector } from "@/lib/store/hooks";
import { Group, Mesh, MeshStandardMaterial, Object3D, Scene } from "three";

type GLTFResult = any;
export function Shirt2(props: JSX.IntrinsicElements["group"]) {
  const dispatch = useAppDispatch();
  const { nodes, materials } = useGLTF("/models/SHIRTS4.gltf") as GLTFResult;
  useEffect(() => {
    dispatch(setModelNodes(nodes));
    dispatch(setModelMaterial(materials));
  }, []);
  const ModelNodes: any = useAppSelector(selectModelNodes);
  const ModelMaterial = useAppSelector(selectModelMaterial);
  return (
    <group {...props} dispose={null}>
      <group scale={1}>
        {ModelNodes &&
          Object.keys(ModelNodes).map((val: any, index) => {
            const object = ModelNodes[val] as Object3D;
            if (object.type !== "Group") {
              console.log("val:", object);
              return (
                <mesh
                  key={index}
                  geometry={(object as Mesh).geometry}
                  material={
                    ModelMaterial[
                      ((object as Mesh).material as MeshStandardMaterial).name
                    ]
                  }
                />
              );
            }
          })}
        {/* <mesh
          geometry={nodes["High_Neck_T-shirt002_1"].geometry}
          material={materials["TShirt Body"]}
        />
        <mesh
          geometry={nodes["High_Neck_T-shirt002_2"].geometry}
          material={materials.Buttons}
        />
        <mesh
          geometry={nodes["High_Neck_T-shirt002_3"].geometry}
          material={materials.Strings}
        />
        <mesh
          geometry={nodes["High_Neck_T-shirt002_4"].geometry}
          material={materials["Bellow Strings"]}
        />
        <mesh
          geometry={nodes["High_Neck_T-shirt002_5"].geometry}
          material={materials["Neck Middle"]}
        /> */}
      </group>
    </group>
  );
}

useGLTF.preload("/models/SHIRTS4.gltf");
